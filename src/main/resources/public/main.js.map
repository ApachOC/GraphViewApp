{"version":3,"sources":["./src/main/resources/frontend/app/components/project-manager/project-manager.component.ts","./src/main/resources/frontend/app/components/project-manager/project-manager.component.html","./src/main/resources/frontend/main.ts","./src/main/resources/frontend/app/app.module.ts","./node_modules/moment/locale sync ^\\.\\/.*$","./src/main/resources/frontend/app/components/app-root/app-root.component.ts","./src/main/resources/frontend/app/components/app-root/app-root.component.html","./src/main/resources/frontend/app/components/project-manager/graph-editor.component.ts","./src/main/resources/frontend/app/components/project-manager/graph-editor.component.html","./src/main/resources/frontend/app/app-routing.module.ts","./src/main/resources/frontend/app/services/user.service.ts","./src/main/resources/frontend/app/components/login-modal/login-modal.component.ts","./src/main/resources/frontend/app/components/login-modal/login-modal.component.html","./src/main/resources/frontend/app/components/project-manager/project-creator.component.ts","./src/main/resources/frontend/app/components/project-manager/project-creator.component.html","./src/main/resources/frontend/environments/environment.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA+C;;;;ICGnC,wEACI;IAAA,4EAGI;IAFI,4WAAkC;IAEtC,uDACJ;IAAA,4DAAS;IACb,4DAAK;;;;IAHO,0DAA2C;IAA3C,yGAA2C;IAC/C,0DACJ;IADI,4FACJ;;;IAKR,0EACI;IAAA,0EACI;IAAA,0EACI;IAAA,8EAAiD;IACrD,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IAHoB,0DAAmB;IAAnB,+EAAmB;;;IAKzC,iFAAuD;;;IAAtC,+EAAmB;;;IAT5C,yEACI;IAAA,yHACI;IAMJ,qNACI;IAER,4DAAM;;;;;IAXkD,wGAAqC;IAC5D,0DAA0C;IAA1C,kFAA0C;;ADPxE,MAAM,uBAAuB;IAEhC;QAKA,aAAQ,GAAmB,EAAE;QAJzB,IAAI,CAAC,UAAU,EAAE;QACjB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAKD,UAAU;QACN,MAAM,WAAW,GAAG,kBAAkB;QAEtC,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;YACxB,IAAI,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;gBACnC,KAAK,EAAE,CAAC;aACX;QACL,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,GAAG,IAAI,WAAW,CACjC,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC,WAAW,CACrD,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC5C,CAAC;;8FAzBQ,uBAAuB;uGAAvB,uBAAuB;QCNpC,yEACI;QAAA,yEACI;QAAA,wEACI;QAAA,iHACI;QAMR,4DAAK;QACT,4DAAM;QACN,mHACI;QAWR,4DAAM;;QAvBuB,0DAAgC;QAAhC,6FAAgC;QACX,0DAAuB;QAAvB,oFAAuB;QACxC,0DAAgC;QAAhC,iFAAgC;QAStC,0DAAgC;QAAhC,iFAAgC;;6FDN9C,uBAAuB;cAJnC,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,kCAAkC;aAClD;;AA6BM,MAAM,WAAW;IAiCpB,YAAY,KAAY;QA9BxB,YAAO,GAAG,IAAI,GAAG,EAA4B,CAAC;QAK9C,UAAK,GAAuB,EAAE,CAAC;QAC/B,UAAK,GAAY,KAAK,CAAC;QAyBnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IA9BD,IAAI,KAAK;QACL,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;IAC5C,CAAC;IAID,IAAI,KAAK;QACL,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;gBACpB,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI;aAChC;iBAAM;gBACH,OAAO,WAAW,CAAC,KAAK,CAAC,UAAU;aACtC;SACJ;aAAM,IAAI,IAAI,CAAC,SAAS,GAAG,CAAC,EAAE;YAC3B,OAAO,WAAW,CAAC,KAAK,CAAC,OAAO;SACnC;aAAM;YACH,OAAO,WAAW,CAAC,KAAK,CAAC,KAAK;SACjC;IACL,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;IAC7B,CAAC;IAED,IAAI,SAAS;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;IAC7B,CAAC;CAKJ;AAED,WAAiB,WAAW;IACxB,IAAY,KAOX;IAPD,WAAY,KAAK;QAEb,mCAAK;QACL,6CAAU;QACV,iCAAI;QACJ,uCAAO;QACP,mCAAK;IACT,CAAC,EAPW,KAAK,GAAL,iBAAK,KAAL,iBAAK,QAOhB;IAED,MAAa,IAAI;QASb,YAAmB,EAAU,EAAS,IAAY,EAAE,IAAa;YAA9C,OAAE,GAAF,EAAE,CAAQ;YAAS,SAAI,GAAJ,IAAI,CAAQ;YARlD,MAAC,GAAG,CAAC,CAAC;YACN,MAAC,GAAG,CAAC,CAAC;YAQF,IAAI,CAAC,eAAe,GAAG,IAAI,IAAI,CAAC,CAAC;QACrC,CAAC;KACJ;IAZY,gBAAI,OAYhB;IAED,MAAa,IAAI;QAGb,YAAmB,MAAY,EAAS,MAAY,EAAE,MAAe;YAAlD,WAAM,GAAN,MAAM,CAAM;YAAS,WAAM,GAAN,MAAM,CAAM;YAChD,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,CAAC;QAC9B,CAAC;KACJ;IANY,gBAAI,OAMhB;AACL,CAAC,EA/BgB,WAAW,KAAX,WAAW,QA+B3B;;;;;;;;;;;;;AEvGD;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACXpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACoB;AACpB;AAC6B;AACG;AACO;AAChD;AACgD;AAChB;AAC/B;AACL;AACE;AAC4C;;;;;;;;AA0BlF,MAAM,SAAS;;wFAAT,SAAS,cAFR,wFAAgB;4IAEjB,SAAS,mBAHT,EAAE,YAbF;YACL,uEAAa;YACb,oEAAgB;YAChB,2DAAW;YACX,qEAAgB;YAChB,yEAAc;YACd,4EAAiB;YACjB,8DAAiB;YACjB,6FAAuB;YACvB,oEAAS;YACT,gEAAgB;YAChB,6DAAY;SACf;mIAIQ,SAAS,mBAtBhB,wFAAgB;QAChB,iGAAmB;QACnB,6GAAuB;QACvB,6GAAuB;QACvB,wGAAoB,aAGlB,uEAAa;QACb,oEAAgB;QAChB,2DAAW;QACX,qEAAgB;QAChB,yEAAc;QACd,4EAAiB;QACjB,8DAAiB;QACjB,6FAAuB;QACvB,oEAAS;QACT,gEAAgB;QAChB,6DAAY;6FAKP,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACV,wFAAgB;oBAChB,iGAAmB;oBACnB,6GAAuB;oBACvB,6GAAuB;oBACvB,wGAAoB;iBACvB;gBACC,OAAO,EAAE;oBACL,uEAAa;oBACb,oEAAgB;oBAChB,2DAAW;oBACX,qEAAgB;oBAChB,yEAAc;oBACd,4EAAiB;oBACjB,8DAAiB;oBACjB,6FAAuB;oBACvB,oEAAS;oBACT,gEAAgB;oBAChB,6DAAY;iBACf;gBACH,SAAS,EAAE,EAAE;gBACb,SAAS,EAAE,CAAC,wFAAgB,CAAC;aAC9B;;kEAlBK,6GAAuB,w8MAHvB,wFAAgB;IAChB,iGAAmB;IACnB,6GAAuB;IACvB,6GAAuB;IACvB,wGAAoB;;;;;;;;;;;;ACvB1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;ACnSA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC+B;;;;;;;ICSzD,qEAA+D;;;IAC/D,4EAAmD;IAAA,uEAAY;IAAA,4DAAS;;;IACxE,4EAAmD;IAAA,uEAAY;IAAA,4DAAS;;;IAGhF,qEACI;IAAA,wEAAoB;IAAA,yEAAc;IAAA,4DAAI;IAC1C,4DAAK;;ADRN,MAAM,gBAAgB;IAE3B,YAAmB,IAAiB,EAAS,YAAsB;QAAhD,SAAI,GAAJ,IAAI,CAAa;QAAS,iBAAY,GAAZ,YAAY,CAAU;IAEnE,CAAC;IAED,aAAa;QACX,OAAO,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IACjC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;IACrB,CAAC;IAED,YAAY;QACV,MAAM,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,sFAAmB,CAAC,CAAC;QAC7D,QAAQ,CAAC,iBAAiB,CAAC,IAAI,GAAG,OAAO,CAAC;IAC5C,CAAC;;gFAjBU,gBAAgB;gGAAhB,gBAAgB;;QCT7B,yEACI;QAAA,uEAAsC;QAAA,oEAAS;QAAA,4DAAI;QACnD,wEACI;QAAA,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","file":"main.js","sourcesContent":["import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'project-manager',\n    templateUrl: './project-manager.component.html'\n})\nexport class ProjectManagerComponent{\n\n    constructor() {\n        this.newProject()\n        this.currentProject = this.projects[0];\n    }\n\n    projects : ProjectData[] = []\n    currentProject: ProjectData;\n\n    newProject() {\n        const defaultName = 'Untitled project'\n\n        let count = 0;\n        this.projects.forEach(prj => {\n            if (prj.title.startsWith(defaultName)) {\n                count++;\n            }\n        });\n\n        this.currentProject = new ProjectData(\n            count ? `${defaultName}  (${count})` : defaultName\n        );\n\n        this.projects.push(this.currentProject);\n    }\n}\n\nexport class ProjectData {\n    title: string;\n\n    nodeMap = new Map<string, ProjectData.Node>();\n\n    get nodes(): ProjectData.Node[] {\n        return Array.from(this.nodeMap.values())\n    }\n    edges: ProjectData.Edge[] = [];\n    ready: boolean = false;\n\n    get state(): ProjectData.State {\n        if (this.nodeCount > 0) {\n            if (this.edgeCount > 0) {\n                return ProjectData.State.Full\n            } else {\n                return ProjectData.State.PointCloud\n            }\n        } else if (this.edgeCount > 0) {\n            return ProjectData.State.Invalid\n        } else {\n            return ProjectData.State.Empty\n        }\n    }\n\n    get nodeCount(): number {\n        return this.nodeMap.size;\n    }\n\n    get edgeCount(): number {\n        return this.edges.length;\n    }\n\n    constructor(title:string) {\n        this.title = title;\n    }\n}\n\nexport namespace ProjectData {\n    export enum State\n    {\n        Empty,\n        PointCloud,\n        Full,\n        Invalid,\n        Ready\n    }\n\n    export class Node {\n        x = 0;\n        y = 0;\n        personalization: number;\n\n        otherValues: Map<string, any>\n\n        static valueNames: string[];\n\n        constructor(public id: string, public name: string, pers?: number) {\n            this.personalization = pers || 0;\n        }\n    }\n\n    export class Edge {\n        weight: number\n\n        constructor(public source: Node, public target: Node, weight?: number) {\n            this.weight = weight || 0;\n        }\n    }\n}\n","<div class=\"card\">\n    <div class=\"card-header\" [hidden]=\"projects.length === 1\">\n        <ul class=\"nav nav-tabs card-header-tabs\" [sortablejs]=\"projects\">\n            <li class=\"nav-item\" *ngFor=\"let project of projects\">\n                <button class=\"nav-link\"\n                        (click)=\"currentProject = project\"\n                        [class.active]=\"currentProject === project\">\n                    {{project.title}}\n                </button>\n            </li>\n        </ul>\n    </div>\n    <div class=\"card-body\" *ngFor=\"let project of projects\" [hidden]=\"currentProject !== project\">\n        <div class=\"container-fluid\" *ngIf=\"project.ready; else projectCreator\">\n            <div class=\"row\">\n                <div class=\"col\">\n                    <graph-editor [project]=\"project\"></graph-editor>\n                </div>\n            </div>\n        </div>\n        <ng-template #projectCreator>\n            <project-creator [project]=\"project\"></project-creator>\n        </ng-template>\n    </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppRootComponent } from './components/app-root/app-root.component';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { LoginModalComponent } from \"./components/login-modal/login-modal.component\";\nimport {NgbAlertModule, NgbDropdownModule, NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ProjectCreatorComponent} from \"./components/project-manager/project-creator.component\";\nimport {NgxDropzoneModule} from \"ngx-dropzone\";\nimport {ProjectManagerComponent} from \"./components/project-manager/project-manager.component\";\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {SortablejsModule} from \"ngx-sortablejs\";\nimport {FormsModule} from \"@angular/forms\";\nimport {CommonModule} from \"@angular/common\";\nimport {GraphEditorComponent} from \"./components/project-manager/graph-editor.component\";\n\n@NgModule({\n  declarations: [\n      AppRootComponent,\n      LoginModalComponent,\n      ProjectCreatorComponent,\n      ProjectManagerComponent,\n      GraphEditorComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n        NgbAlertModule,\n        NgbDropdownModule,\n        NgxDropzoneModule,\n        BrowserAnimationsModule,\n        NgbModule,\n        SortablejsModule,\n        CommonModule\n    ],\n  providers: [],\n  bootstrap: [AppRootComponent]\n})\nexport class AppModule { }\n","var map = {\n\t\"./af\": \"K/tc\",\n\t\"./af.js\": \"K/tc\",\n\t\"./ar\": \"jnO4\",\n\t\"./ar-dz\": \"o1bE\",\n\t\"./ar-dz.js\": \"o1bE\",\n\t\"./ar-kw\": \"Qj4J\",\n\t\"./ar-kw.js\": \"Qj4J\",\n\t\"./ar-ly\": \"HP3h\",\n\t\"./ar-ly.js\": \"HP3h\",\n\t\"./ar-ma\": \"CoRJ\",\n\t\"./ar-ma.js\": \"CoRJ\",\n\t\"./ar-sa\": \"gjCT\",\n\t\"./ar-sa.js\": \"gjCT\",\n\t\"./ar-tn\": \"bYM6\",\n\t\"./ar-tn.js\": \"bYM6\",\n\t\"./ar.js\": \"jnO4\",\n\t\"./az\": \"SFxW\",\n\t\"./az.js\": \"SFxW\",\n\t\"./be\": \"H8ED\",\n\t\"./be.js\": \"H8ED\",\n\t\"./bg\": \"hKrs\",\n\t\"./bg.js\": \"hKrs\",\n\t\"./bm\": \"p/rL\",\n\t\"./bm.js\": \"p/rL\",\n\t\"./bn\": \"kEOa\",\n\t\"./bn-bd\": \"loYQ\",\n\t\"./bn-bd.js\": \"loYQ\",\n\t\"./bn.js\": \"kEOa\",\n\t\"./bo\": \"0mo+\",\n\t\"./bo.js\": \"0mo+\",\n\t\"./br\": \"aIdf\",\n\t\"./br.js\": \"aIdf\",\n\t\"./bs\": \"JVSJ\",\n\t\"./bs.js\": \"JVSJ\",\n\t\"./ca\": \"1xZ4\",\n\t\"./ca.js\": \"1xZ4\",\n\t\"./cs\": \"PA2r\",\n\t\"./cs.js\": \"PA2r\",\n\t\"./cv\": \"A+xa\",\n\t\"./cv.js\": \"A+xa\",\n\t\"./cy\": \"l5ep\",\n\t\"./cy.js\": \"l5ep\",\n\t\"./da\": \"DxQv\",\n\t\"./da.js\": \"DxQv\",\n\t\"./de\": \"tGlX\",\n\t\"./de-at\": \"s+uk\",\n\t\"./de-at.js\": \"s+uk\",\n\t\"./de-ch\": \"u3GI\",\n\t\"./de-ch.js\": \"u3GI\",\n\t\"./de.js\": \"tGlX\",\n\t\"./dv\": \"WYrj\",\n\t\"./dv.js\": \"WYrj\",\n\t\"./el\": \"jUeY\",\n\t\"./el.js\": \"jUeY\",\n\t\"./en-au\": \"Dmvi\",\n\t\"./en-au.js\": \"Dmvi\",\n\t\"./en-ca\": \"OIYi\",\n\t\"./en-ca.js\": \"OIYi\",\n\t\"./en-gb\": \"Oaa7\",\n\t\"./en-gb.js\": \"Oaa7\",\n\t\"./en-ie\": \"4dOw\",\n\t\"./en-ie.js\": \"4dOw\",\n\t\"./en-il\": \"czMo\",\n\t\"./en-il.js\": \"czMo\",\n\t\"./en-in\": \"7C5Q\",\n\t\"./en-in.js\": \"7C5Q\",\n\t\"./en-nz\": \"b1Dy\",\n\t\"./en-nz.js\": \"b1Dy\",\n\t\"./en-sg\": \"t+mt\",\n\t\"./en-sg.js\": \"t+mt\",\n\t\"./eo\": \"Zduo\",\n\t\"./eo.js\": \"Zduo\",\n\t\"./es\": \"iYuL\",\n\t\"./es-do\": \"CjzT\",\n\t\"./es-do.js\": \"CjzT\",\n\t\"./es-mx\": \"tbfe\",\n\t\"./es-mx.js\": \"tbfe\",\n\t\"./es-us\": \"Vclq\",\n\t\"./es-us.js\": \"Vclq\",\n\t\"./es.js\": \"iYuL\",\n\t\"./et\": \"7BjC\",\n\t\"./et.js\": \"7BjC\",\n\t\"./eu\": \"D/JM\",\n\t\"./eu.js\": \"D/JM\",\n\t\"./fa\": \"jfSC\",\n\t\"./fa.js\": \"jfSC\",\n\t\"./fi\": \"gekB\",\n\t\"./fi.js\": \"gekB\",\n\t\"./fil\": \"1ppg\",\n\t\"./fil.js\": \"1ppg\",\n\t\"./fo\": \"ByF4\",\n\t\"./fo.js\": \"ByF4\",\n\t\"./fr\": \"nyYc\",\n\t\"./fr-ca\": \"2fjn\",\n\t\"./fr-ca.js\": \"2fjn\",\n\t\"./fr-ch\": \"Dkky\",\n\t\"./fr-ch.js\": \"Dkky\",\n\t\"./fr.js\": \"nyYc\",\n\t\"./fy\": \"cRix\",\n\t\"./fy.js\": \"cRix\",\n\t\"./ga\": \"USCx\",\n\t\"./ga.js\": \"USCx\",\n\t\"./gd\": \"9rRi\",\n\t\"./gd.js\": \"9rRi\",\n\t\"./gl\": \"iEDd\",\n\t\"./gl.js\": \"iEDd\",\n\t\"./gom-deva\": \"qvJo\",\n\t\"./gom-deva.js\": \"qvJo\",\n\t\"./gom-latn\": \"DKr+\",\n\t\"./gom-latn.js\": \"DKr+\",\n\t\"./gu\": \"4MV3\",\n\t\"./gu.js\": \"4MV3\",\n\t\"./he\": \"x6pH\",\n\t\"./he.js\": \"x6pH\",\n\t\"./hi\": \"3E1r\",\n\t\"./hi.js\": \"3E1r\",\n\t\"./hr\": \"S6ln\",\n\t\"./hr.js\": \"S6ln\",\n\t\"./hu\": \"WxRl\",\n\t\"./hu.js\": \"WxRl\",\n\t\"./hy-am\": \"1rYy\",\n\t\"./hy-am.js\": \"1rYy\",\n\t\"./id\": \"UDhR\",\n\t\"./id.js\": \"UDhR\",\n\t\"./is\": \"BVg3\",\n\t\"./is.js\": \"BVg3\",\n\t\"./it\": \"bpih\",\n\t\"./it-ch\": \"bxKX\",\n\t\"./it-ch.js\": \"bxKX\",\n\t\"./it.js\": \"bpih\",\n\t\"./ja\": \"B55N\",\n\t\"./ja.js\": \"B55N\",\n\t\"./jv\": \"tUCv\",\n\t\"./jv.js\": \"tUCv\",\n\t\"./ka\": \"IBtZ\",\n\t\"./ka.js\": \"IBtZ\",\n\t\"./kk\": \"bXm7\",\n\t\"./kk.js\": \"bXm7\",\n\t\"./km\": \"6B0Y\",\n\t\"./km.js\": \"6B0Y\",\n\t\"./kn\": \"PpIw\",\n\t\"./kn.js\": \"PpIw\",\n\t\"./ko\": \"Ivi+\",\n\t\"./ko.js\": \"Ivi+\",\n\t\"./ku\": \"JCF/\",\n\t\"./ku.js\": \"JCF/\",\n\t\"./ky\": \"lgnt\",\n\t\"./ky.js\": \"lgnt\",\n\t\"./lb\": \"RAwQ\",\n\t\"./lb.js\": \"RAwQ\",\n\t\"./lo\": \"sp3z\",\n\t\"./lo.js\": \"sp3z\",\n\t\"./lt\": \"JvlW\",\n\t\"./lt.js\": \"JvlW\",\n\t\"./lv\": \"uXwI\",\n\t\"./lv.js\": \"uXwI\",\n\t\"./me\": \"KTz0\",\n\t\"./me.js\": \"KTz0\",\n\t\"./mi\": \"aIsn\",\n\t\"./mi.js\": \"aIsn\",\n\t\"./mk\": \"aQkU\",\n\t\"./mk.js\": \"aQkU\",\n\t\"./ml\": \"AvvY\",\n\t\"./ml.js\": \"AvvY\",\n\t\"./mn\": \"lYtQ\",\n\t\"./mn.js\": \"lYtQ\",\n\t\"./mr\": \"Ob0Z\",\n\t\"./mr.js\": \"Ob0Z\",\n\t\"./ms\": \"6+QB\",\n\t\"./ms-my\": \"ZAMP\",\n\t\"./ms-my.js\": \"ZAMP\",\n\t\"./ms.js\": \"6+QB\",\n\t\"./mt\": \"G0Uy\",\n\t\"./mt.js\": \"G0Uy\",\n\t\"./my\": \"honF\",\n\t\"./my.js\": \"honF\",\n\t\"./nb\": \"bOMt\",\n\t\"./nb.js\": \"bOMt\",\n\t\"./ne\": \"OjkT\",\n\t\"./ne.js\": \"OjkT\",\n\t\"./nl\": \"+s0g\",\n\t\"./nl-be\": \"2ykv\",\n\t\"./nl-be.js\": \"2ykv\",\n\t\"./nl.js\": \"+s0g\",\n\t\"./nn\": \"uEye\",\n\t\"./nn.js\": \"uEye\",\n\t\"./oc-lnc\": \"Fnuy\",\n\t\"./oc-lnc.js\": \"Fnuy\",\n\t\"./pa-in\": \"8/+R\",\n\t\"./pa-in.js\": \"8/+R\",\n\t\"./pl\": \"jVdC\",\n\t\"./pl.js\": \"jVdC\",\n\t\"./pt\": \"8mBD\",\n\t\"./pt-br\": \"0tRk\",\n\t\"./pt-br.js\": \"0tRk\",\n\t\"./pt.js\": \"8mBD\",\n\t\"./ro\": \"lyxo\",\n\t\"./ro.js\": \"lyxo\",\n\t\"./ru\": \"lXzo\",\n\t\"./ru.js\": \"lXzo\",\n\t\"./sd\": \"Z4QM\",\n\t\"./sd.js\": \"Z4QM\",\n\t\"./se\": \"//9w\",\n\t\"./se.js\": \"//9w\",\n\t\"./si\": \"7aV9\",\n\t\"./si.js\": \"7aV9\",\n\t\"./sk\": \"e+ae\",\n\t\"./sk.js\": \"e+ae\",\n\t\"./sl\": \"gVVK\",\n\t\"./sl.js\": \"gVVK\",\n\t\"./sq\": \"yPMs\",\n\t\"./sq.js\": \"yPMs\",\n\t\"./sr\": \"zx6S\",\n\t\"./sr-cyrl\": \"E+lV\",\n\t\"./sr-cyrl.js\": \"E+lV\",\n\t\"./sr.js\": \"zx6S\",\n\t\"./ss\": \"Ur1D\",\n\t\"./ss.js\": \"Ur1D\",\n\t\"./sv\": \"X709\",\n\t\"./sv.js\": \"X709\",\n\t\"./sw\": \"dNwA\",\n\t\"./sw.js\": \"dNwA\",\n\t\"./ta\": \"PeUW\",\n\t\"./ta.js\": \"PeUW\",\n\t\"./te\": \"XLvN\",\n\t\"./te.js\": \"XLvN\",\n\t\"./tet\": \"V2x9\",\n\t\"./tet.js\": \"V2x9\",\n\t\"./tg\": \"Oxv6\",\n\t\"./tg.js\": \"Oxv6\",\n\t\"./th\": \"EOgW\",\n\t\"./th.js\": \"EOgW\",\n\t\"./tk\": \"Wv91\",\n\t\"./tk.js\": \"Wv91\",\n\t\"./tl-ph\": \"Dzi0\",\n\t\"./tl-ph.js\": \"Dzi0\",\n\t\"./tlh\": \"z3Vd\",\n\t\"./tlh.js\": \"z3Vd\",\n\t\"./tr\": \"DoHr\",\n\t\"./tr.js\": \"DoHr\",\n\t\"./tzl\": \"z1FC\",\n\t\"./tzl.js\": \"z1FC\",\n\t\"./tzm\": \"wQk9\",\n\t\"./tzm-latn\": \"tT3J\",\n\t\"./tzm-latn.js\": \"tT3J\",\n\t\"./tzm.js\": \"wQk9\",\n\t\"./ug-cn\": \"YRex\",\n\t\"./ug-cn.js\": \"YRex\",\n\t\"./uk\": \"raLr\",\n\t\"./uk.js\": \"raLr\",\n\t\"./ur\": \"UpQW\",\n\t\"./ur.js\": \"UpQW\",\n\t\"./uz\": \"Loxo\",\n\t\"./uz-latn\": \"AQ68\",\n\t\"./uz-latn.js\": \"AQ68\",\n\t\"./uz.js\": \"Loxo\",\n\t\"./vi\": \"KSF8\",\n\t\"./vi.js\": \"KSF8\",\n\t\"./x-pseudo\": \"/X5v\",\n\t\"./x-pseudo.js\": \"/X5v\",\n\t\"./yo\": \"fzPg\",\n\t\"./yo.js\": \"fzPg\",\n\t\"./zh-cn\": \"XDpg\",\n\t\"./zh-cn.js\": \"XDpg\",\n\t\"./zh-hk\": \"SatO\",\n\t\"./zh-hk.js\": \"SatO\",\n\t\"./zh-mo\": \"OmwH\",\n\t\"./zh-mo.js\": \"OmwH\",\n\t\"./zh-tw\": \"kOpN\",\n\t\"./zh-tw.js\": \"kOpN\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"RnhZ\";","import { Component } from '@angular/core';\nimport {LoginModalComponent} from \"../login-modal/login-modal.component\";\nimport {UserService} from \"../../services/user.service\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app-root.component.html'\n})\nexport class AppRootComponent {\n\n  constructor(public user: UserService, public modalService: NgbModal) {\n\n  }\n\n  authenticated() {\n    return this.user.authenticated;\n  }\n\n  logout() {\n    this.user.logout();\n  }\n\n  openLoginDlg() {\n    const modalRef = this.modalService.open(LoginModalComponent);\n    modalRef.componentInstance.name = 'World';\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand auto\" href=\"#\">GraphView</a>\n    <ul class=\"navbar-nav\">\n        <li class=\"nav-item\" ngbDropdown>\n            <a class=\"nav-link\" ngbDropdownToggle id=\"navFileDropdown\" href=\"#\">\n                Project\n            </a>\n            <div ngbDropdownMenu aria-labelledby=\"navFileDropdown\">\n                <button ngbDropdownItem (click)=\"prjMgr.newProject()\">New project</button>\n                <button ngbDropdownItem>Download results</button>\n                <div class=\"dropdown-divider\" *ngIf=\"user.authenticated\"></div>\n                <button ngbDropdownItem *ngIf=\"user.authenticated\">Save project</button>\n                <button ngbDropdownItem *ngIf=\"user.authenticated\">Load project</button>\n            </div>\n        </li>\n        <li *ngIf=\"user.isAdmin\">\n            <a class=\"nav-link\">Administration</a>\n        </li>\n    </ul>\n\n    <div class=\"navbar-nav flex-row ml-md-auto d-none d-md-flex\">\n        <div [hidden]=\"authenticated()\">\n            <button class=\"btn btn-outline-primary\" (click)=\"openLoginDlg()\">Login</button>\n        </div>\n        <div [hidden]=\"!authenticated()\">\n            <button class=\"btn btn-outline-danger\" (click)=\"logout()\">Logout</button>\n        </div>\n    </div>\n</nav>\n<project-manager #prjMgr></project-manager>\n","import {AfterViewInit, Component, Input, OnInit, ViewChild} from \"@angular/core\";\nimport * as Chart from 'chart.js';\nimport 'chartjs-chart-graph';\nimport 'chartjs-plugin-datalabels';\nimport 'chartjs-plugin-dragdata';\nimport {ProjectData} from \"./project-manager.component\";\n\ndeclare module 'chart.js' {\n    interface ChartOptions {\n        dragData: boolean,\n        dragX: boolean\n        simulation: any\n    }\n    interface ChartDataSets {\n        edges: any\n    }\n}\n\n@Component({\n    selector: 'graph-editor',\n    templateUrl: './graph-editor.component.html'\n})\nexport class GraphEditorComponent implements AfterViewInit {\n    private chart;\n\n    @Input() public project: ProjectData;\n\n    @ViewChild('chartEditorCanvas') canvas;\n\n    private get labels(): string[] {\n        return this.project.nodes.map((node) => {\n           return `Name: ${node.name}`;\n        });\n    }\n\n    ngAfterViewInit(): void {\n        const ctx = this.canvas.nativeElement.getContext('2d');\n        this.chart = new Chart(ctx, {\n            type: 'forceDirectedGraph',\n            data: {\n                labels: this.labels,\n                datasets: [\n                    {\n                        pointBackgroundColor: 'yellow',\n                        pointRadius: 5,\n                        data: this.project.nodes,\n                        edges: this.project.edges,\n                    },\n                ],\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                dragData: true,\n                dragX: true,\n                simulation: {\n                    forces: {\n                        link: {\n                            id: (d) => d.id,\n                        },\n                    },\n                },\n\n                legend: {\n                    display: false,\n                },\n                plugins: {\n                    datalabels: {\n                        formatter: (node) => node.id\n                    }\n                },\n            }\n        });\n    }\n}\n","<div class=\"row\">\n    <div class=\"col-8\">\n        <div class=\"graph-editor-viewer\">\n            <div class=\"graph-editor-toolbars\">\n                <div class=\"btn-group-vertical\">\n                    <button class=\"btn btn-outline-primary\" ngbTooltip=\"Select and manipulate nodes\">\n                        <i class=\"fa fa-lg fa-hand-pointer\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-primary\" ngbTooltip=\"Create new nodes\">\n                        <i class=\"fa fa-lg fa-plus-square\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-primary\" ngbTooltip=\"Remove nodes\">\n                        <i class=\"fa fa-lg fa-minus-square\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-primary\" ngbTooltip=\"Create edges\">\n                        <i class=\"fa fa-lg fa-project-diagram\"></i>\n                        <i class=\"fa fa-plus\" style=\"position:absolute;top:17px;right:10px;font-size:0.5em\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-primary\" ngbTooltip=\"Remove edges\">\n                        <i class=\"fa fa-lg fa-project-diagram\"></i>\n                        <i class=\"fa fa-minus\" style=\"position:absolute;top:17px;right:10px;font-size:0.5em\"></i>\n                    </button>\n                </div>\n                <div class=\"btn-group-vertical\">\n                    <button class=\"btn btn-outline-secondary\" ngbTooltip=\"Run library function\">\n                        <i class=\"fa fa-lg fa-bolt\"></i>\n                    </button>\n                </div>\n                <div class=\"btn-group-vertical\">\n                    <button class=\"btn btn-outline-success\" ngbTooltip=\"Fit to screen\">\n                        <i class=\"fa fa-lg fa-compress\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-success\" ngbTooltip=\"Find specific node\">\n                        <i class=\"fa fa-lg fa-search\"></i>\n                    </button>\n                    <button class=\"btn btn-outline-success\" ngbTooltip=\"Recalculate layout\">\n                        <i class=\"fa fa-lg fa-sync-alt\"></i>\n                    </button>\n                </div>\n            </div>\n        <div class=\"graph-editor-viewer-canvas\">\n            <canvas #chartEditorCanvas></canvas>\n        </div>\n    </div>\n</div>\n    <div class=\"col-4\">\n        <div class=\"card\">\n            <div class=\"card-header\">\n                Node information\n            </div>\n            <div class=\"card-body\">\n                <h5>bla</h5>\n                <p>asdf</p>\n                <h5>bla</h5>\n                <h5>bla</h5>\n            </div>\n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class UserService {\n\n    get authenticated(): boolean {\n        return (this.userObject && this.userObject.authenticated) || false;\n    }\n\n    get isUser(): boolean {\n        return this.userObject && this.userObject.authorities\n            .map(auth => {return auth.authority})\n            .includes('ROLE_USER');\n    }\n\n    get isAdmin(): boolean {\n        return this.userObject && this.userObject.authorities\n            .map(auth => {return auth.authority})\n            .includes('ROLE_ADMIN');\n    }\n\n    private userObject: any;\n\n    constructor(private http: HttpClient) { }\n\n    authenticate(credentials, callback, error) {\n\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type':  'application/json',\n                'Accept':  'application/json',\n                'Authorization': 'Basic ' + btoa(\n                    `${credentials.username}:${credentials.password}`\n                )\n            })\n        };\n\n        this.http.get('http://localhost:8080/user', httpOptions).subscribe(response => {\n            if (response['name']) {\n                this.userObject = response;\n            } else {\n                this.userObject = null;\n                error();\n            }\n            return callback && callback();\n        }, error);\n    }\n\n    logout() {\n        const httpOptions = {\n            headers: new HttpHeaders({\n                'Content-Type':  'application/json',\n                'Accept':  'application/json',\n                'Authorization': 'Basic ' + btoa(\n                    `user:pass`\n                )\n            })\n        };\n\n        this.http.post('http://localhost:8080/logout', {}, httpOptions).subscribe(() => {\n            this.userObject = null;\n        }, (error) => {\n            this.userObject = null;\n        });\n    }\n}\n","import {Component} from '@angular/core';\n\nimport {UserService} from \"../../services/user.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n    selector: 'login-modal-content',\n    templateUrl: './login-modal.component.html'\n})\nexport class LoginModalComponent {\n\n    credentials = {username: '', password: ''};\n\n    showAlert = false;\n\n    alertText = \"Error during login\";\n\n    constructor(public modal: NgbActiveModal, private user: UserService) {}\n\n    login() {\n        this.user.authenticate(this.credentials, () => {\n            this.modal.close(true);\n        }, () => {\n            this.showAlert = true;\n        });\n        return false;\n    }\n}\n\n","    <div class=\"modal-header\">\n        <h4 class=\"modal-title\" id=\"modal-basic-title\">Login</h4>\n        <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        <ngb-alert type=\"danger\" [hidden]=\"!showAlert\" (close)=\"showAlert = false\" >{{alertText}}</ngb-alert>\n        <div class=\"form-group\">\n            <label for=\"username\">Username:</label> <input type=\"text\"\n                class=\"form-control\" id=\"username\" name=\"username\" [(ngModel)]=\"credentials.username\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"password\">Password:</label> <input type=\"password\"\n                class=\"form-control\" id=\"password\" name=\"password\" [(ngModel)]=\"credentials.password\"/>\n        </div>\n    </div>\n    <div class=\"modal-footer\">\n        <button type=\"submit\" class=\"btn btn-primary\" (click)=\"login()\">Submit</button>\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close()\">Cancel</button>\n    </div>\n","import {Component, Input, TemplateRef} from '@angular/core';\nimport {ProjectData} from \"./project-manager.component\";\nimport {NgxDropzoneChangeEvent} from \"ngx-dropzone\";\nimport '@angular/common';\nimport {NgbAlert, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n\n@Component({\n    selector: 'project-creator',\n    templateUrl: './project-creator.component.html'\n})\nexport class ProjectCreatorComponent{\n\n    @Input() project: ProjectData\n\n    acceptFiles = 'application/csv,text/csv';\n    nodeImportOptions = {\n        show: false, importPers: true,\n        firstLineHeader: true,\n\n        finish: () => {},\n        cancel: () => {},\n\n        id: 0, name: 1, personalization: 2,\n        values: ['1', '2', '3']\n    }\n    edgeImportOptions = {\n        show: false, importWeights: true,\n        firstLineHeader: true, generateLayout: true,\n\n        finish: () => {},\n        cancel: () => {},\n\n        from: 0, to: 1, weight: 2,\n        values: ['1', '2', '3']\n    }\n    showNodeAlert: boolean = false;\n    showEdgeAlert: boolean = false;\n\n    constructor(private modalService: NgbModal) { }\n\n    public onAddFile(event: NgxDropzoneChangeEvent) {\n        if (event.addedFiles.length) {\n            this.loadFile(event.addedFiles[0]).finally(\n                () => {\n                    while (event.addedFiles.length) {\n                        event.addedFiles.pop();\n                    }\n                });\n        }\n    }\n\n    public generateGraph(count: number, maxEdges: number): void {\n        for (let i = 0; i < count; i++) {\n            const node = new ProjectData.Node('' + i, 'Node ' + i);\n            this.project.nodeMap.set(node.id, node);\n        }\n\n        for (let i = 0; i < count; i++) {\n            const randMax = Math.floor(Math.random() * Math.random() * Math.floor(maxEdges)) + 1;\n            const prevTargets = [];\n            for (let j = 0; j < randMax; j++) {\n                const from = this.project.nodeMap.get(i.toString());\n                let to = this.project.nodeMap.get(\n                    Math.floor(Math.random() * Math.floor(count)).toString()\n                );\n\n                while (from === to || prevTargets.includes(to)) {\n                    to = this.project.nodeMap.get(\n                        Math.floor(Math.random() * Math.floor(count)).toString()\n                    );\n                }\n                const edge = new ProjectData.Edge(from, to);\n                this.project.edges.push(edge);\n                prevTargets.push(edge.target);\n            }\n        }\n        this.project.ready = true;\n    }\n\n    private async loadFile(file: File) {\n        switch (file.type) {\n            case 'text/csv':\n            case 'application/csv':\n                const lines = await this.parseCSV(file);\n                if (this.project.state === ProjectData.State.Empty) {\n                    await this.loadNodes(lines);\n                } else {\n                    await this.loadEdges(lines);\n                }\n        }\n    }\n\n    private async parseCSV(file: File): Promise<string[][]> {\n        const output = [];\n        // this should be done on BE\n        const text = await file.text();\n        const lines = text.split('\\n');\n        lines.forEach(line => {\n            const words = line.split(';');\n            if (words.length > 2) {\n                output.push(words);\n            }\n        });\n\n        return output;\n    }\n\n    private async loadNodes(lines: string[][]) {\n        const m = this.nodeImportOptions;\n        // wait for user to confirm the mapping\n        const result = await new Promise<boolean>((resolve, reject) => {\n            m.finish = () => resolve(true);\n            m.cancel = () => resolve(false);\n            m.show = true; m.values = lines[0]\n        }).finally(() => m.show = false);\n        if (!result) {\n            // cancel\n        } else {\n            for (let i = m.firstLineHeader ? 1 : 0;\n                 i < lines.length; i++) {\n                const line = lines[i];\n                const node = new ProjectData.Node(line[m.id], line[m.name],\n                    m.importPers ? parseInt(line[m.personalization]) : null);\n                this.project.nodeMap.set(node.id, node);\n                //todo validate id, import other parameters\n            }\n        }\n        this.showNodeAlert = true;\n    }\n\n    private async loadEdges(lines: string[][]) {\n        const m = this.edgeImportOptions;\n        // wait for user to confirm the mapping\n        const result = await new Promise<boolean>((resolve, reject) => {\n            m.finish = () => resolve(true);\n            m.cancel = () => resolve(false);\n            m.show = true; m.values = lines[0]\n        }).finally(() => m.show = false);\n        if (!result) {\n            // cancel\n        } else {\n            for (let i = m.firstLineHeader ? 1 : 0;\n                 i < lines.length; i++) {\n                const line = lines[i];\n                const edge = new ProjectData.Edge(this.project.nodeMap[line[m.from]],\n                    this.project.nodeMap[line[m.to]],m.importWeights ?\n                        parseInt(line[m.weight]) : null);\n                this.project.edges.push(edge);\n            }\n        }\n        this.showEdgeAlert = true;\n    }\n\n    readyProject() {\n        this.project.ready = true;\n    }\n\n    showGenerateModal(generateModal: TemplateRef<any>) {\n        const resull = this.modalService.open(generateModal,\n            {ariaLabelledBy: 'modal-basic-title'}).result.then((result) => {\n            this.generateGraph(result.nodeCount, result.edgeCount);\n        });\n    }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col\">\n            <ngb-alert *ngIf=\"showNodeAlert\" type=\"success\" (close)=\"showNodeAlert = false\">\n                Nodes imported successfully.\n            </ngb-alert>\n            <ngb-alert *ngIf=\"showEdgeAlert\" type=\"success\" (close)=\"showEdgeAlert = false\">\n                Edges imported successfully.\n            </ngb-alert>\n\n            <div class=\"card\" [hidden]=\"project.nodeCount && project.edgeCount\">\n                <div class=\"card-header\" i18n>\n                    <h5 class=\"d-inline-block\">Import graph data from file</h5>\n                    <button (click)=\"showGenerateModal(generateModal)\" class=\"close\">\n                        <i class=\"fa fa-random\" ngbTooltip=\"Generate random graph\"></i>\n                    </button>\n                </div>\n                <div class=\"card-body\">\n                    <ngx-dropzone (change)=\"onAddFile($event)\" [accept]=\"acceptFiles\"\n                                  [hidden]=\"nodeImportOptions.show || edgeImportOptions.show || project.edgeCount\">\n                        <ngx-dropzone-label>\n                            <h5 [hidden]=\"project.nodeCount > 0\">Please upload CSV file containing node information.</h5>\n                            <h5 [hidden]=\"project.nodeCount === 0\">Please upload CSV file containing edge information.</h5>\n                        </ngx-dropzone-label>\n                    </ngx-dropzone>\n\n                    <div *ngIf=\"nodeImportOptions.show\">\n                        <h5>Node import options</h5>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"nodeHeaderLine\"\n                                   [(ngModel)]=\"nodeImportOptions.firstLineHeader\">\n                            <label class=\"form-check-label\" for=\"nodeHeaderLine\">Use first line as a header</label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"usePers\"\n                                   [(ngModel)]=\"nodeImportOptions.importPers\">\n                            <label class=\"form-check-label\" for=\"usePers\">Import personalization data</label>\n                        </div>\n                        <hr>\n                        <div class=\"form-group\">\n                            <label for=\"idColumn\">ID Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"nodeImportOptions.id\" id=\"idColumn\">\n                                <option *ngFor=\"let name of nodeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{nodeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"nameColumn\">Name Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"nodeImportOptions.name\" id=\"nameColumn\">\n                                <option *ngFor=\"let name of nodeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{nodeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"nodeImportOptions.importPers\">\n                            <label for=\"persColumn\">Personalization Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"nodeImportOptions.personalization\" id=\"persColumn\">\n                                <option *ngFor=\"let name of nodeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{nodeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n                        <button class=\"btn btn-primary\" (click)=\"nodeImportOptions.finish()\">Import nodes</button>\n                        <button class=\"btn btn-danger float-right\" (click)=\"nodeImportOptions.cancel()\">Cancel import</button>\n                    </div>\n                    <div *ngIf=\"edgeImportOptions.show\">\n                        <h5>Edge import options</h5>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"edgeHeaderLine\"\n                                   [(ngModel)]=\"edgeImportOptions.firstLineHeader\">\n                            <label class=\"form-check-label\" for=\"edgeHeaderLine\">Use first line as a header</label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"importWeights\"\n                                   [(ngModel)]=\"edgeImportOptions.importWeights\">\n                            <label class=\"form-check-label\" for=\"importWeights\">Import edge weight information</label>\n                        </div>\n                        <div class=\"form-check\">\n                            <input type=\"checkbox\" class=\"form-check-input\" id=\"generateLayout\"\n                                   [(ngModel)]=\"edgeImportOptions.generateLayout\">\n                            <label class=\"form-check-label\" for=\"generateLayout\">\n                                Generate force directed layout during import (may slow down import considerably)\n                            </label>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"sIdColumn\">Source ID Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"edgeImportOptions.from\" id=\"sIdColumn\">\n                                <option *ngFor=\"let name of edgeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{edgeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"dIdColumn\">Destination ID Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"edgeImportOptions.to\" id=\"dIdColumn\">\n                                <option *ngFor=\"let name of edgeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{edgeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"edgeImportOptions.importWeights \">\n                            <label for=\"weightColumn\">Personalization Column</label>\n                            <select class=\"form-control\" [(ngModel)]=\"edgeImportOptions.weight\" id=\"weightColumn\">\n                                <option *ngFor=\"let name of edgeImportOptions.values; index as i\"\n                                        value=\"{{i}}\">{{edgeImportOptions.firstLineHeader ? name : i}}</option>\n                            </select>\n                        </div>\n\n                        <button class=\"btn btn-primary\" (click)=\"edgeImportOptions.finish()\">Import edges</button>\n                        <button class=\"btn btn-danger float-right\" (click)=\"edgeImportOptions.cancel()\">Cancel import</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <ng-template #generateModal let-modal>\n            <div class=\"modal-header\" i18n>Generate random graph</div>\n            <div class=\"modal-body\">\n                <div class=\"form-group\">\n                    <label for=\"genNodeCount\" i18n>Total node count in the graph</label>\n                    <input id=\"genNodeCount\" class=\"form-control\" value=\"20\"  type=\"number\" #count>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"genEdgeCount\" i18n>Max number of edges per node</label>\n                    <input id=\"genEdgeCount\" class=\"form-control\" value=\"3\" type=\"number\" #count2>\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <div class=\"text-center\">\n                    <button class=\"btn btn-secondary\" i18n\n                            (click)=\"modal.close( {nodeCount: count.valueAsNumber, edgeCount: count2.valueAsNumber} )\">\n                        Generate!\n                    </button>\n                </div>\n            </div>\n        </ng-template>\n    </div>\n\n    <div class=\"row mt-2\">\n        <div class=\"col\">\n            <div class=\"card\">\n                <div class=\"card-header\" i18n>Project options</div>\n                <div class=\"card-body\">\n                    <div class=\"form-group\">\n                        <label for=\"newProjectName\" i18n>Project title:</label>\n                        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"project.title\" id=\"newProjectName\">\n                    </div>\n\n                    <h5 class=\"card-title\" i18n>Graph details</h5>\n                    <p i18n>Nodes: {{ project.nodeCount }}</p>\n                    <p i18n>Edges: {{ project.edgeCount }}</p>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"text-center\">\n                        <button class=\"btn btn-primary\" (click)=\"readyProject()\" i18n>Create project</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}